name: Android Debug

on:
  push:
    branches: [ master ]
    tags: [ v* ]
  pull_request:
    branches: [ master ]

  workflow_dispatch:

  env:
    task-id: ${{ github.sha }}

jobs:
  init-yarn-cache:
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Project
        uses: actions/checkout@v2
      - name: Get Yarn Cache Directory Path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache Node Modules
        uses: actions/cache@v2
        env:
          cache-name: cache-yarn
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/node_modules
          key: ${{ runner.os }}-node_modules
          restore-keys: ${{ runner.os }}-node_modules
      - name: Install Yarn Dependencies
        run: |
          yarn install
      - name: Cache node_modules for current workflow
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/node_modules
          key: ${{ runner.os }}-node_modules-${{ env.task-id }}
  build-taro:
    needs: init-yarn-cache
    runs-on: ubuntu-latest
    steps: 
      - name: Fetch Project
        uses: actions/checkout@v2
      - name: restore node_modules
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/node_modules
          key: ${{ runner.os }}-node_modules-${{ env.task-id }}
      - name: Build Taro JS Bundle
        run: |
          yarn build:rn-android
      - name: Cache Taro Products
        uses: actions/cache@v2
        with:
          path: dist/rn/android
          key: taro-android-products-${{ env.task-id }}
      - name: Upload Taro Products
        uses: actions/upload-artifact@v2
        with:
          name: taro-android-products
          path: dist/rn/android/
  pre-build-android:
    needs: init-yarn-cache
    runs-on: ubuntu-latest
      - name: Fetch Taro Shell Project
        uses: actions/checkout@v2
        with:
          repository: 4332weizi/taro-native-shell
          ref: 0.63.2_origin
      - name: Cache node_modules
        with:
          path: ${{ github.workspace }}/node_modules
          key: ${{ runner.os }}-node_modules-${{ env.task-id }}
      - name: Cache Gradle
        uses: actions/cache@v2
        env:
          cache-name: gradle-cache
        with:
          path: ~/.gradle
          key: ${{ runner.os }}-gradle
          restore-keys: |
            ${{ runner.os }}-gradle
      - name: pre assembleDebug
        run: |
          cd ./android && ./gradlew assembleDebug
      - name: store build cache
        with:
          path: .
          key: ${{ runner.os }}-build-cache-${{ env.task-id }}
  build-android:
    needs: pre-build-android,build-taro
    runs-on: ubuntu-latest
      - name: restore build cache
        with:
          path: .
          key: ${{ runner.os }}-build-cache-${{ env.task-id }}
      - name: Cache Taro Products
        uses: actions/cache@v2
        with:
          path: dist/rn/android
          key: taro-android-products-${{ env.task-id }}
      - name: Move Taro JS Bundle
        run: |
          mv ./dist/rn/android/index.android.bundle ./android/app/src/main/assets/index.android.bundle
          rsync -a ./dist/rn/android/ ./android/app/src/main/res/
      - name: Assemble Android Debug
        run: |
          cd ./android && ./gradlew assembleDebug
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: app-debug.apk
          path: ${{ github.workspace }}/android/app/build/outputs/apk/debug/