# 工作流名称
name: Android Release

# 触发工作流程的事件
on:
  push:
    branches: [ master ]
    tags: [ v* ]

  workflow_dispatch:
    inputs: 


# 工作流环境变量
env:
  # 壳工程
  SHELL_REPO: 4332weizi/taro-native-shell
  # 壳工程ref
  SHELL_REPO_REF: 0.64.0_support_workflows
  # 应用的application_id
  APP_ID: taro.mortgage.calculator
  # 应用名称
  APP_NAME: Taro Mortgage Caclulator
  # 合并到应用res目录的资源
  APP_RES: android/res/
  # 应用icon
  APP_ICON: ic_launcher
  # 应用圆角icon
  # APP_ROUND_ICON: ic_launcher_round
  # 应用支持的CPU架构
  APP_ABI_FILTERS: armeabi-v7a, arm64-v8a
  # 打包类型
  BUILD_TYPE: release
  # 版本名称
  VERSION_NAME: 1.0
  # 版本号
  VERSION_CODE: 10
  # 密钥库文件
  KEYSTORE_FILE: android/keystore.jks
  # 密钥库口令
  KEYSTORE_PASSWORD: 123456
  # 密钥库别名
  KEYSTORE_KEY_ALIAS: app
  # 密钥库别名口令
  KEYSTORE_KEY_PASSWORD: abcdefg

# 工作流作业
jobs:
  build-android:
    runs-on: ubuntu-latest
    steps: 
      # 检出工程
      - name: Checkout Project
        uses: actions/checkout@v2
      # 检出壳工程
      - name: Checkout Taro Shell Project
        uses: actions/checkout@v2
        with:
          repository: ${{ env.SHELL_REPO }}
          ref: ${{ env.SHELL_REPO_REF }}
          path: taro-native-shell
      # 合并依赖
      - name: Merge Package Dependencies
        run: |
          node ${{ github.workspace }}/.github/merge-package.js \
            ${{ github.workspace }}/package.json \
            ${{ github.workspace }}/taro-native-shell/package.json \
            ${{ github.workspace }}/package.json
          cat ${{ github.workspace }}/package.json
      # 获取node_modules缓存
      - name: Cache node_modules Folder
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/node_modules
          key: ${{ runner.os }}-node_modules
          restore-keys: ${{ runner.os }}-node_modules
      # 查询Yarn缓存目录
      - name: Get Yarn Cache Directory Path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      # 获取Yarn缓存
      - name: Cache Yarn
        uses: actions/cache@v2
        env:
          cache-name: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      # 执行yarn install
      - name: Install Dependencies
        run: |
          yarn install
      # 打包jsbundle
      - name: Build Taro
        run: |
          yarn build:rn-android
      # 上传jsbundle等
      - name: Upload Taro Products
        uses: actions/upload-artifact@v2
        with:
          name: taro-android-products
          path: dist/rn/android/
      # 将node_moudles链接到壳工程目录
      - name: Link node_modules Folder to Shell Project
        run: |
          ln -s $PWD/node_modules $PWD/taro-native-shell/node_modules
      # 合并资源文件
      - name: Merge Resources
        run: |
          mv ./dist/rn/android/index.android.bundle ./taro-native-shell/android/app/src/main/assets/index.android.bundle
          if [ ${{ env.APP_ICON }} = ic_launcher ]; then 
            rm ./taro-native-shell/android/app/src/main/res/mipmap-*dpi/ic_launcher.png
          fi
          rsync -a ./dist/rn/android/ ./taro-native-shell/android/app/src/main/res/
          rsync -a ${{ env.APP_RES }}/ ./taro-native-shell/android/app/src/main/res/
      # 获取gradle缓存
      - name: Cache Gradle
        uses: actions/cache@v2
        env:
          cache-name: gradle-cache
        with:
          path: ~/.gradle
          key: ${{ runner.os }}-gradle
          restore-keys: |
            ${{ runner.os }}-gradle
      # 打包Android apk
      - name: Assemble Android ${{ env.BUILD_TYPE }}
        run: |
          cd ./taro-native-shell/android && \
          ./gradlew assemble${{ env.BUILD_TYPE }} \
            -Papp_id=${{ env.APP_ID }} \
            -Papp_name='${{ env.APP_NAME }}' \
            -Papp_icon=${{env.APP_ICON}} \
            -Papp_round_icon=${{env.APP_ROUND_ICON}} \
            -Pversion_code=${{ env.VERSION_CODE }} \
            -Pversion_name=${{ env.VERSION_NAME }} \
            -Pabi_filters='${{ env.APP_ABI_FILTERS }}' \
            -Pkeystore_file=${{ github.workspace }}/${{ env.KEYSTORE_FILE }} \
            -Pkeystore_password=${{ env.KEYSTORE_PASSWORD }} \
            -Pkeystore_key_alias=${{ env.KEYSTORE_KEY_ALIAS }} \
            -Pkeystore_key_password=${{ env.KEYSTORE_KEY_PASSWORD }}
      # 上传Android apk包
      - name: Upload Android Products
        uses: actions/upload-artifact@v2
        with:
          name: app-${{ env.BUILD_TYPE }}
          path: ${{ github.workspace }}/taro-native-shell/android/app/build/outputs/apk/${{ env.BUILD_TYPE }}/app-${{ env.BUILD_TYPE }}.apk